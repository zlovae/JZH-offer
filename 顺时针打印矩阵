/**输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，例如，如果输入如下4 X 4矩阵： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 则依次打印出数*字1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.
*/

import java.util.ArrayList;
public class Solution {
    public ArrayList<Integer> printMatrix(int [][] matrix) {
        ArrayList res = new ArrayList();
        int len = 0;
    
        int start = 0, endX = matrix.length-1, endY = matrix[0].length-1;
        if(endX > endY) {
            len = (endY)/2;
        } else {
            len = (endX)/2;
        }
         
        while(start<=len) {
            PrintMatrixInCircle(res, matrix, start, endX, endY);
            start++;
            endX--;
            endY--;
        }
        return res;
    }
    public ArrayList<Integer> PrintMatrixInCircle(ArrayList<Integer> res, int [][] matrix, int start, int endX, int endY) {
         
        if((endX > start) && (endY > start)) {
            for(int i=start; i<endY; i++){
                res.add(matrix[start][i]);
            }
            for(int i=start; i<endX; i++) {
                res.add(matrix[i][endY]);
            }
            for(int i=endY; i>start; i--) {
                res.add(matrix[endX][i]);
            }
            for(int i=endX; i>start; i--) {
                res.add(matrix[i][start]);
            }
        } else if((endX == start) && (endY > start)) {
            for(int i=start; i<=endY; i++){
                res.add(matrix[start][i]);
            }
        } else if((endX > start) && (endY == start)) {
            for(int i=start; i<=endX; i++) {
                res.add(matrix[i][endY]);
            }
        } else {
            res.add(matrix[start][start]);
        }
        return res;
    }
}
