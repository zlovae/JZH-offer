输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。

/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
import static java.util.Arrays.binarySearch;
import static java.util.Arrays.copyOfRange;
public class Solution {
    public static TreeNode reConstructBinaryTree(int [] pre,int [] in) {
        TreeNode res = new TreeNode(pre[0]);
        if(pre.length > 1){
            int mid = -1;
            for(int i = 0; i < in.length; i++) {
                if(in[i] == pre[0]){
                    mid = i;
                    break;
                }
            }
            if(mid ==0){
                res.right = reConstructBinaryTree(copyOfRange(pre,1,pre.length),copyOfRange(in,1, in.length));
            } else if(mid ==pre.length-1) {
                res.left = reConstructBinaryTree(copyOfRange(pre, 1, pre.length), copyOfRange(in, 0, in.length-1));
            } else {
                res.left = reConstructBinaryTree(copyOfRange(pre, 1, mid+1),copyOfRange(in, 0, mid));
                res.right = reConstructBinaryTree(copyOfRange(pre, mid+1, pre.length), copyOfRange(in, mid+1, in.length));
            }
        }
        return  res;
    }
}
